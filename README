# README

This project uses the D3 library to read in `samples.json` from a specified URL. The JSON file contains data about microbial species (OTUs) found in human navels, and the project displays this data in various interactive visualizations.

## Getting Started

The script starts by defining the endpoint to fetch the JSON data from:

```javascript
const endpt = "https://2u-data-curriculum-team.s3.amazonaws.com/dataviz-classroom/v1.1/14-Interactive-Web-Visualizations/02-Homework/samples.json";
```

The D3 library's `json` function is used to fetch the JSON data from the endpoint:

```javascript
d3.json(endpt).then(function(data) {
    console.log(typeof data);
    // ...
});
```

The data is then logged to the console for debugging purposes [Source 6](https://www.geeksforgeeks.org/d3-js-json-function/).

## Populating the Dropdown Menu

The `names` property from the fetched data, which contains the IDs of all the samples, is used to populate a dropdown menu in the user interface:

```javascript
list = data.names; 
belly = d3.select("#selDataset");

for (let i = 0; i < list.length; i++) {
    belly.append("option").text(list[i]).attr("value", list[i]);
}
```

## Displaying Data

When a sample ID is selected from the dropdown menu, the `optionChanged` function is called. This function fetches the data again and filters it to only include the selected sample. It then uses this data to create a bar chart and a bubble chart.

The bar chart displays the top 10 OTUs found in the selected individual:

```javascript
let trace = [{
    x: trace2[0].slice(0, 10).reverse(),
    y: trace1[0].slice(0, 10).map(otu_id => `OTU ${otu_id}`).reverse(),
    text: trace3[0].slice(0, 10).reverse(),  type: "bar",
    orientation: "h"
}];
                 
let layout = {
    title: "Top 10 OTUs Found",
    xaxis: { title: "Microbial Count (sample_values)" },
};

Plotly.newPlot("bar", trace, layout);
```

The bubble chart displays each OTU found in the selected individual:

```javascript
let bubtrace = [{
    x: trace1[0],
    y: trace2[0],
    text: trace3[0],
    mode: 'markers',  marker: {
    size: trace2[0].map(num => num * 0.25),
    color: trace1[0]
    },
}];
                 
let bublayout = {
    xaxis: { title: "OTU ID" },
    yaxis: { title: "Microbial Count (sample_values" }
};

Plotly.newPlot("bubble", bubtrace, bublayout);
```

## Displaying Metadata

Finally, the `optionChanged` function also displays metadata about the selected individual in the "Demographic Info" box:

```javascript
let metadata = data.metadata;
let resultArray2 = metadata.filter(sampleObj => sampleObj.id == id);
let result = resultArray2[0];
let panel = d3.select("#sample-metadata");
panel.html("");

Object.entries(result).forEach(([key, value]) => {       
console.log(key, value);  //
panel.append("h6").text(`${key.toUpperCase()}: ${value}`);
});
```

This metadata includes demographic information about the individual from whom the sample was taken [Source 10](https://www.freecodecamp.org/news/d3js-tutorial-data-visualization-for-beginners/).

Credit to Phind.com for assistance in creating this readme file






